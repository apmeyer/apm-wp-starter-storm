{"version":3,"names":["mobileMenuButton","document","getElementById","mobileMenuWrap","menuItems","querySelectorAll","breakpoint","isTransitioning","onHeaderResize","subMenus","window","innerWidth","forEach","submenu","removeAttribute","style","maxHeight","scrollHeight","hideMobileMenu","classList","remove","setAttribute","setTimeout","addMobileSubmenuButtons","item","menuItemId","getAttribute","a","querySelector","subMenu","subMenuId","button","createElement","after","showDesktopSubmenu","timer","clearTimeout","addEventListeners","exitActions","addEventListener","event","preventDefault","add","key","contains","relatedTarget","action","hideDesktopSubmenu","mobileSubmenuButtons","menuId","menu","previousSibling","display","ResizeObserver","observe","siteHeader"],"sources":["../../src/js/modules/_site-header.js","../../src/js/theme.js"],"sourcesContent":["const mobileMenuButton  = document.getElementById( 'mobileMenuButton' )\nconst mobileMenuWrap    = document.getElementById( 'mobileMenuWrap' )\nconst siteNav           = document.getElementById( 'siteNav' )\nconst menuItems         = document.querySelectorAll( '.main-menu li.menu-item-has-children' )\nconst breakpoint        = 950\nconst devMode           = true\nlet isTransitioning     = false\n\n\nconst init = function() {\n\n    if ( mobileMenuButton && mobileMenuWrap ) {\n        addMobileSubmenuButtons()\n        addEventListeners()\n    }\n\n    const headerResizeObserver = new ResizeObserver( onHeaderResize )\n    headerResizeObserver.observe( document.querySelector( '.site-header-wrap' ) );\n\n}\n\n\nconst onHeaderResize = function() {\n\n    const subMenus = document.querySelectorAll('.sub-menu')\n\n    if ( window.innerWidth >= breakpoint ) {\n        subMenus.forEach( submenu => {\n            submenu.removeAttribute('style')\n        } )\n    } else {\n        subMenus.forEach( submenu => {\n            submenu.style.maxHeight = submenu.scrollHeight + \"px\"\n        } )\n    }\n\n}\n\n\nconst displayMobileMenu = function() {\n    mobileMenuWrap.classList.add('is-block')\n    mobileMenuButton.setAttribute( 'aria-expanded', 'true' )\n    setTimeout( () => {\n        mobileMenuWrap.classList.add('transition-in')\n    }, 5 )\n}\n\n\nconst hideMobileMenu = function() {\n    mobileMenuWrap.classList.remove('transition-in')\n    mobileMenuButton.setAttribute( 'aria-expanded', 'false' )\n    setTimeout( () => {\n        mobileMenuWrap.classList.remove('is-block')\n    }, 250 )\n}\n\n\nconst addMobileSubmenuButtons = function() {\n\n    menuItems.forEach( item => {\n\n        const menuItemId = item.getAttribute( 'id' )\n        const a = item.querySelector( 'a' )\n        const subMenu = item.querySelector( '.sub-menu' )\n        const subMenuId = menuItemId + '_submenu';\n\n        a.setAttribute( 'aria-expanded', 'false' )\n        subMenu.setAttribute( 'id', subMenuId )\n\n        const button = document.createElement('button')\n        button.setAttribute( 'aria-controls', subMenuId );\n        button.setAttribute( 'aria-expanded', 'false' )\n        button.setAttribute( 'class', 'mobile-submenu-button' )\n\n        a.after( button )\n\n    } )\n\n}\n\n\nconst hideAllSubmenusOnDesktop = function() {\n    if ( window.innerWidth >= breakpoint ) {\n        menuItems.forEach( item => {\n            item.classList.remove( 'is-ready-to-transition' )\n            item.querySelector( 'a' ).setAttribute( 'aria-expanded', 'false' )\n        } )\n    }\n}\n\n\nconst showDesktopSubmenu = function( item, timer ) {\n    if ( window.innerWidth >= breakpoint ) {\n\n        clearTimeout( timer )\n        hideAllSubmenusOnDesktop()\n\n        // item.classList.add( 'is-ready-to-transition' )\n        item.querySelector( 'a' ).setAttribute( 'aria-expanded', 'true' )\n\n    }\n}\n\n\nconst hideDesktopSubmenu = function( item ) {\n\n    // item.classList.remove( 'is-ready-to-transition' )\n    item.querySelector( 'a' ).setAttribute( 'aria-expanded', 'false' )\n\n}\n\n\nconst addEventListeners = function() {\n\n    if ( !mobileMenuButton || !menuItems ) return\n\n    const exitActions = [ 'mouseout', 'focusout' ]\n\n    // Toggle the menu on button click\n    mobileMenuButton.addEventListener( 'click', ( event ) => {\n\n        event.preventDefault()\n\n        if ( isTransitioning ) return\n\n        if ( mobileMenuButton.getAttribute('aria-expanded') === 'true' ) {\n            hideMobileMenu()\n        } else {\n            displayMobileMenu()\n        }\n\n        isTransitioning = false\n\n    })\n\n    // If user hits the escape key, close the menu\n    document.addEventListener( 'keydown', ( event ) => {\n        if ( event.key === 'Escape' ) {\n            hideMobileMenu()\n        }\n    } )\n\n    // If focus leaves the menu, close the menu\n    if ( !devMode && siteNav ) {\n        siteNav.addEventListener( 'focusout', ( event ) => {\n            if ( !siteNav.contains( event.relatedTarget ) ) {\n                hideMobileMenu()\n            }\n        } )\n    }\n\n    // Setup desktop submenu behavior for hover and focus\n    menuItems.forEach( item => {\n\n        let timer = null\n        const a = item.querySelector( 'a' )\n\n        // On wide screens, show submenu on hover\n        item.addEventListener( 'mouseover', event => {\n            if ( item.contains( event.relatedTarget ) ) return\n            showDesktopSubmenu( item, timer )\n        } )\n\n        // On wide screens, show submenu on focus\n        a.addEventListener( 'focus', () => {\n            showDesktopSubmenu( item, timer )\n        } )\n\n        // On wide screens, hide menu on mouse out and focus out\n        exitActions.forEach( action => {\n            item.addEventListener( action, event => {\n\n                if ( item.contains( event.relatedTarget ) ) return\n\n                if ( window.innerWidth >= breakpoint ) {\n                    timer = setTimeout( () => {\n                        hideDesktopSubmenu( item )\n                    }, 500 )\n                }\n\n            } )\n        } )\n\n    } )\n\n    const mobileSubmenuButtons = document.querySelectorAll( '.mobile-submenu-button' )\n\n    // Setup mobile submenu expanding\n    if ( mobileSubmenuButtons ) {\n        mobileSubmenuButtons.forEach( button => {\n\n            const menuId = button.getAttribute( 'aria-controls' )\n            const menu = document.getElementById( menuId )\n\n            button.addEventListener( 'click', event => {\n\n                event.preventDefault()\n\n                if ( isTransitioning ) return\n\n                isTransitioning = true\n\n                if ( button.getAttribute('aria-expanded') === 'false' ) {\n                    button.setAttribute( 'aria-expanded', 'true' )\n                    button.previousSibling.setAttribute( 'aria-expanded', 'true' )\n                    menu.style.display = 'block'\n                    setTimeout( () => {\n                        menu.style.maxHeight = menu.scrollHeight + \"px\"\n                    }, 5 )\n                } else {\n                    button.setAttribute( 'aria-expanded', 'false' )\n                    button.previousSibling.setAttribute( 'aria-expanded', 'false' )\n                    menu.style.maxHeight = 0 + \"px\"\n                    setTimeout( () => {\n                        menu.removeAttribute( 'style' )\n                    }, 250 )\n                }\n\n                setTimeout( () => {\n                    isTransitioning = false\n                }, 250)\n\n            } )\n        } )\n    }\n\n}\n\n\nconst api = {\n    init: init\n}\n\nexport default api;","import { default as siteHeader } from \"./modules/_site-header\"\n\n(() => {\n\n    siteHeader.init()\n\n})();"],"mappings":"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"}